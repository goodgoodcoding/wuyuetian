<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xnt.dhq.mapper.ScaleMapper">
  <resultMap id="BaseResultMap" type="com.xnt.dhq.model.Scale">
    <id column="scale_id" jdbcType="INTEGER" property="scaleId" />
    <result column="scale_name" jdbcType="VARCHAR" property="scaleName" />
    <result column="scale_typeId" jdbcType="INTEGER" property="scaleTypeid" />
    <result column="designer_id" jdbcType="INTEGER" property="designerId" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="suitable_agestart" jdbcType="INTEGER" property="suitableAgestart" />
    <result column="suitable_ageend" jdbcType="INTEGER" property="suitableAgeend" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="modify_time" jdbcType="DATE" property="modifyTime" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xnt.dhq.model.Scale">
    <result column="info" jdbcType="LONGVARCHAR" property="info" />
    <result column="instruction" jdbcType="LONGVARCHAR" property="instruction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    scale_id, scale_name, scale_typeId, designer_id, create_time, suitable_agestart, 
    suitable_ageend, state, modify_time, organization_id
  </sql>
  <sql id="Blob_Column_List">
    info, instruction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xnt.dhq.model.ScaleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xnt.dhq.model.ScaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from scale
    where scale_id = #{scaleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from scale
    where scale_id = #{scaleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xnt.dhq.model.ScaleExample">
    delete from scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xnt.dhq.model.Scale">
    <selectKey keyProperty="scaleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scale (scale_id,scale_name, scale_typeId, designer_id,
      create_time, suitable_agestart, suitable_ageend, 
      state, modify_time, organization_id, 
      info, instruction)
    values (#{scaleId,jdbcType=INTEGER},#{scaleName,jdbcType=VARCHAR}, #{scaleTypeid,jdbcType=INTEGER}, #{designerId,jdbcType=INTEGER},
      #{createTime,jdbcType=DATE}, #{suitableAgestart,jdbcType=INTEGER}, #{suitableAgeend,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR}, #{modifyTime,jdbcType=DATE}, #{organizationId,jdbcType=INTEGER}, 
      #{info,jdbcType=LONGVARCHAR}, #{instruction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xnt.dhq.model.Scale">
    <selectKey keyProperty="scaleId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into scale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scaleName != null">
        scale_name,
      </if>
      <if test="scaleTypeid != null">
        scale_typeId,
      </if>
      <if test="designerId != null">
        designer_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="suitableAgestart != null">
        suitable_agestart,
      </if>
      <if test="suitableAgeend != null">
        suitable_ageend,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="info != null">
        info,
      </if>
      <if test="instruction != null">
        instruction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scaleName != null">
        #{scaleName,jdbcType=VARCHAR},
      </if>
      <if test="scaleTypeid != null">
        #{scaleTypeid,jdbcType=INTEGER},
      </if>
      <if test="designerId != null">
        #{designerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="suitableAgestart != null">
        #{suitableAgestart,jdbcType=INTEGER},
      </if>
      <if test="suitableAgeend != null">
        #{suitableAgeend,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=DATE},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        #{info,jdbcType=LONGVARCHAR},
      </if>
      <if test="instruction != null">
        #{instruction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xnt.dhq.model.ScaleExample" resultType="java.lang.Integer">
    select count(*) from scale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update scale
    <set>
      <if test="record.scaleId != null">
        scale_id = #{record.scaleId,jdbcType=INTEGER},
      </if>
      <if test="record.scaleName != null">
        scale_name = #{record.scaleName,jdbcType=VARCHAR},
      </if>
      <if test="record.scaleTypeid != null">
        scale_typeId = #{record.scaleTypeid,jdbcType=INTEGER},
      </if>
      <if test="record.designerId != null">
        designer_id = #{record.designerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.suitableAgestart != null">
        suitable_agestart = #{record.suitableAgestart,jdbcType=INTEGER},
      </if>
      <if test="record.suitableAgeend != null">
        suitable_ageend = #{record.suitableAgeend,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=DATE},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=INTEGER},
      </if>
      <if test="record.info != null">
        info = #{record.info,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.instruction != null">
        instruction = #{record.instruction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update scale
    set scale_id = #{record.scaleId,jdbcType=INTEGER},
      scale_name = #{record.scaleName,jdbcType=VARCHAR},
      scale_typeId = #{record.scaleTypeid,jdbcType=INTEGER},
      designer_id = #{record.designerId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      suitable_agestart = #{record.suitableAgestart,jdbcType=INTEGER},
      suitable_ageend = #{record.suitableAgeend,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=DATE},
      organization_id = #{record.organizationId,jdbcType=INTEGER},
      info = #{record.info,jdbcType=LONGVARCHAR},
      instruction = #{record.instruction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update scale
    set scale_id = #{record.scaleId,jdbcType=INTEGER},
      scale_name = #{record.scaleName,jdbcType=VARCHAR},
      scale_typeId = #{record.scaleTypeid,jdbcType=INTEGER},
      designer_id = #{record.designerId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=DATE},
      suitable_agestart = #{record.suitableAgestart,jdbcType=INTEGER},
      suitable_ageend = #{record.suitableAgeend,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      modify_time = #{record.modifyTime,jdbcType=DATE},
      organization_id = #{record.organizationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xnt.dhq.model.Scale">
    update scale
    <set>
      <if test="scaleName != null">
        scale_name = #{scaleName,jdbcType=VARCHAR},
      </if>
      <if test="scaleTypeid != null">
        scale_typeId = #{scaleTypeid,jdbcType=INTEGER},
      </if>
      <if test="designerId != null">
        designer_id = #{designerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="suitableAgestart != null">
        suitable_agestart = #{suitableAgestart,jdbcType=INTEGER},
      </if>
      <if test="suitableAgeend != null">
        suitable_ageend = #{suitableAgeend,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=DATE},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="info != null">
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
      <if test="instruction != null">
        instruction = #{instruction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where scale_id = #{scaleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xnt.dhq.model.Scale">
    update scale
    set scale_name = #{scaleName,jdbcType=VARCHAR},
      scale_typeId = #{scaleTypeid,jdbcType=INTEGER},
      designer_id = #{designerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      suitable_agestart = #{suitableAgestart,jdbcType=INTEGER},
      suitable_ageend = #{suitableAgeend,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=DATE},
      organization_id = #{organizationId,jdbcType=INTEGER},
      info = #{info,jdbcType=LONGVARCHAR},
      instruction = #{instruction,jdbcType=LONGVARCHAR}
    where scale_id = #{scaleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xnt.dhq.model.Scale">
    update scale
    set scale_name = #{scaleName,jdbcType=VARCHAR},
      scale_typeId = #{scaleTypeid,jdbcType=INTEGER},
      designer_id = #{designerId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      suitable_agestart = #{suitableAgestart,jdbcType=INTEGER},
      suitable_ageend = #{suitableAgeend,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=DATE},
      organization_id = #{organizationId,jdbcType=INTEGER}
    where scale_id = #{scaleId,jdbcType=INTEGER}
  </update>
</mapper>